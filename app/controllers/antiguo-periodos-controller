class PeriodosController < ApplicationController
  # GET /periodos
  # GET /periodos.xml
  def index
    @periodos = Periodo.order("inicio").to_a

    respond_to do |format|
      format.html # index.html.erb
      format.xml  { render :xml => @periodos }
    end
  end

  # GET /periodos/new
  # GET /periodos/new.xml
  def new
    @periodo = Periodo.new
    @dia=formato_europeo(Date.today)
    #hoy=Date.today.to_s.split('-') 
    #@dia=hoy[2]+'-'+hoy[1]+'-'+hoy[0]

    respond_to do |format|
      format.html # new.html.erb
      format.xml  { render :xml => @periodo }
    end
  end

  # GET /periodos/1/edit
  def edit
    @periodo = Periodo.find(params[:id])
    @tipoact=@periodo.tipo
    @activo="NO" unless @periodo.activo?
    @admision="NO" unless @periodo.admision?
  end

  # POST /periodos
  # POST /periodos.xml
  def create
    @periodo = Periodo.new(params[:periodo])
    @periodo.tipo=params[:tipo]
 #   @periodo.activo=params[:activo]=="SI"
 
    if params[:inicio]=~ /[0-3]?[0-9]\-[0-1]?[0-9]\-[0-9]{4}/
      ninicio=formato_europeo(params[:inicio])
      #fecha=params[:inicio].to_s.split('-')
      #ninicio=fecha[2]+"-"+fecha[1]+"-"+fecha[0]
      @periodo.inicio=ninicio.to_date
    else
      @periodo.inicio=nil
    end
    
    if params[:fin]=~ /[0-3]?[0-9]\-[0-1]?[0-9]\-[0-9]{4}/
      nfin=formato_europeo(params[:fin])
      #fecha=params[:fin].to_s.split('-')
      #nfin=fecha[2]+"-"+fecha[1]+"-"+fecha[0]
      @periodo.fin=nfin.to_date
    else
      @periodo.fin=nil
    end

    if params[:iniciosol]=~ /[0-3]?[0-9]\-[0-1]?[0-9]\-[0-9]{4}/
      ninicio=formato_europeo(params[:iniciosol])
      #fecha=params[:iniciosol].to_s.split('-')
      #ninicio=fecha[2]+"-"+fecha[1]+"-"+fecha[0]
      @periodo.iniciosol=ninicio.to_date
    else
      @periodo.iniciosol=nil
    end

    if params[:finsol]=~ /[0-3]?[0-9]\-[0-1]?[0-9]\-[0-9]{4}/
      nfin=formato_europeo(params[:finsol])
      #fecha=params[:finsol].to_s.split('-')
      #nfin=fecha[2]+"-"+fecha[1]+"-"+fecha[0]
      @periodo.finsol=nfin.to_date
    else
      @periodo.finsol=nil
    end

    respond_to do |format|
      if @periodo.save
        @periodos = Periodo.order("inicio").to_a
        format.html { render :action => "index" }
        format.xml  { render :xml => @periodo, :status => :created, :location => @periodo }
      else
        format.html { render :action => "new" }
        format.xml  { render :xml => @periodo.errors, :status => :unprocessable_entity }
      end
    end
  end

  # PUT /periodos/1
  # PUT /periodos/1.xml
  def update
    @periodo = Periodo.find(params[:id])
    @periodo.tipo=params[:tipo]
    @periodo.activo=params[:activo]=="SI"
    @periodo.admision=params[:admision]=="SI"

    if params[:inicio]=~ /[0-3]?[0-9]\-[0-1]?[0-9]\-[0-9]{4}/
      ninicio=formato_europeo(params[:inicio])
      #fecha=params[:inicio].to_s.split('-')
      #ninicio=fecha[2]+"-"+fecha[1]+"-"+fecha[0]
      @periodo.inicio=ninicio.to_date
    else
      @periodo.inicio=nil
    end
    
    if params[:fin]=~ /[0-3]?[0-9]\-[0-1]?[0-9]\-[0-9]{4}/
      nfin=formato_europeo(params[:fin])
      #fecha=params[:fin].to_s.split('-')
      #nfin=fecha[2]+"-"+fecha[1]+"-"+fecha[0]
      @periodo.fin=nfin.to_date
    else
      @periodo.fin=nil
    end

    if params[:iniciosol]=~ /[0-3]?[0-9]\-[0-1]?[0-9]\-[0-9]{4}/
      ninicio=formato_europeo(params[:iniciosol])
      #fecha=params[:iniciosol].to_s.split('-')
      #nfin=fecha[2]+"-"+fecha[1]+"-"+fecha[0]
      @periodo.iniciosol=ninicio.to_date
    else
      @periodo.iniciosol=nil
    end

    if params[:finsol]=~ /[0-3]?[0-9]\-[0-1]?[0-9]\-[0-9]{4}/
      nfin=formato_europeo(params[:finsol])
      #fecha=params[:finsol].to_s.split('-')
      #nfin=fecha[2]+"-"+fecha[1]+"-"+fecha[0]
      @periodo.finsol=nfin.to_date
    else
      @periodo.finsol=nil
    end

    respond_to do |format|

    #if session[:tramos_horarios].solicitudes.empty?           # no permitiremos dos periodos de admision del mismo tipo
    #  flash.now[:notice]="No hay tramos horarios en su peticion"  # o de activacion
    #  format.html { redirect_to(new_solicitudlab_path) }
    #else
    
           if @periodo.update_attributes(params[:periodo])
              @periodos = Periodo.order("inicio").to_a
              format.html { render :action => "index" }
              format.xml  { head :ok }
           else
              format.html { render :action => "edit" }
              format.xml  { render :xml => @periodo.errors, :status => :unprocessable_entity }
           end
    end
  end

  def cambia_activo # falta el enviar correosSSSSSS!!!!!!!!!
     
     if params[:periodo_activo]=="1"
      if params[:tipo]=="Lectivo"
       render :update do |page|
        page.replace_html(:'activo', :partial=>"control_adjudicacion_on")
       end
      else
       render :update do |page|
        page.replace_html(:'activo', :partial=>"control_adjudicacion_examen_on")
       end
      end
     else
       if params[:tipo]=="Lectivo"
       render :update do |page|
        page.replace_html(:'activo', :partial=>"control_adjudicacion_off")
       end
      else
       render :update do |page|
        page.replace_html(:'activo', :partial=>"control_adjudicacion_examen_off")
       end
      end
     end
     
  end

  def enviar_correo_activo_on
   if params[:tipo]=="Lectivo"
    CorreoTecnicos::adjudicalectivo.deliver_later _later
   else
    CorreoTecnicos::adjudicaexamen.deliver_later _later
   end
    @mensaje="Correo enviado"
    render :update do |page|
        page.replace_html(:'activo', :partial=>"control_adjudicacion_on", :object=>@mensaje)
    end
  end

  def enviar_correo_activo_off
    if params[:tipo]=="Lectivo"
    CorreoTecnicos::cierreadjudicalectivo.deliver_later 
   else
    CorreoTecnicos::cierreadjudicaexamen.deliver_later 
   end
    @mensaje="Correo enviado"
    render :update do |page|
        page.replace_html(:'activo', :partial=>"control_adjudicacion_off", :object=>@mensaje)
    end
  end


  def cambia_admision
     
     if params[:periodo_admision]=="1"
       if params[:tipo]=="Lectivo"
       render :update do |page|
        page.replace_html(:'admision', :partial=>"control_admision_on")
       end
      else
       render :update do |page|
        page.replace_html(:'admision', :partial=>"control_admision_examen_on")
       end
      end
     else
       if params[:tipo]=="Lectivo"
       render :update do |page|
        page.replace_html(:'admision', :partial=>"control_admision_off")
       end
      else
       render :update do |page|
        page.replace_html(:'admision', :partial=>"control_admision_examen_off")
       end
      end
     end
     
  end


  def enviar_correo_lectivo_on
   if params[:tipo]=="Lectivo"
    CorreoTecnicos::aperturalectivo.deliver_later 
   else
    CorreoTecnicos::aperturaexamen.deliver_later 
   end
    @mensaje="Correo enviado"
    render :update do |page|
        page.replace_html(:'admision', :partial=>"control_admision_on", :object=>@mensaje)
    end
  end

  def enviar_correo_lectivo_off
   if params[:tipo]=="Lectivo"
    CorreoTecnicos::cierrelectivo.deliver_later 
   else
    CorreoTecnicos::cierreexamen.deliver_later 
   end
    @mensaje="Correo enviado"
    render :update do |page|
        page.replace_html(:'admision', :partial=>"control_admision_off", :object=>@mensaje)
    end
  end


  # DELETE /periodos/1
  # DELETE /periodos/1.xml
  def destroy
    @periodo = Periodo.find(params[:id])
    @periodo.destroy

    respond_to do |format|
      format.html { redirect_to(periodos_url) }
      format.xml  { head :ok }
    end
  end
end
